@model CinemaTicketingSystem.ViewModels.ResetPasswordViewModel

@{
    ViewData["Title"] = "Reset Password";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title text-center">Reset Password</h3>
                </div>
                <div class="card-body">
                    <p class="text-muted text-center">
                        Please enter your new password below.
                    </p>

                    <form asp-action="ResetPassword" method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <input type="hidden" asp-for="Token" />
                        <input type="hidden" asp-for="Email" />

                        <div class="form-group mb-3">
                            <label asp-for="Email" class="form-label">Email Address</label>
                            <input asp-for="Email" class="form-control" disabled />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Password" class="form-label">New Password</label>
                            <input asp-for="Password" type="password" class="form-control" placeholder="Enter your new password" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                            <div class="form-text">
                                Password must be at least 6 characters long.
                            </div>
                        </div>

                        <div class="form-group mb-4">
                            <label asp-for="ConfirmPassword" class="form-label">Confirm New Password</label>
                            <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="Confirm your new password" />
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-key me-2"></i>Reset Password
                            </button>
                            <a asp-action="Login" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-2"></i>Back to Login
                            </a>
                        </div>
                    </form>
                </div>
                <div class="card-footer text-center text-muted">
                    <small>Remember your password? <a asp-action="Login">Login here</a></small>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Password strength indicator (optional enhancement)
        const passwordInput = document.getElementById('Password');
        const confirmPasswordInput = document.getElementById('ConfirmPassword');

        if (passwordInput && confirmPasswordInput) {
            passwordInput.addEventListener('input', function() {
                const password = this.value;
                const strengthText = document.getElementById('passwordStrength') || createStrengthIndicator();

                if (password.length === 0) {
                    strengthText.textContent = '';
                    strengthText.className = 'form-text';
                } else if (password.length < 6) {
                    strengthText.textContent = 'Weak - too short';
                    strengthText.className = 'form-text text-danger';
                } else if (password.length < 8) {
                    strengthText.textContent = 'Medium';
                    strengthText.className = 'form-text text-warning';
                } else {
                    strengthText.textContent = 'Strong';
                    strengthText.className = 'form-text text-success';
                }
            });

            confirmPasswordInput.addEventListener('input', function() {
                const password = passwordInput.value;
                const confirmPassword = this.value;

                if (confirmPassword.length > 0 && password !== confirmPassword) {
                    this.setCustomValidity('Passwords do not match');
                } else {
                    this.setCustomValidity('');
                }
            });

            function createStrengthIndicator() {
                const strengthText = document.createElement('div');
                strengthText.id = 'passwordStrength';
                strengthText.className = 'form-text';
                passwordInput.parentNode.appendChild(strengthText);
                return strengthText;
            }
        }
    </script>
}