@model CinemaTicketingSystem.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Log in";
}

<h1>@ViewData["Title"]</h1>

<h4>Use your account to log in.</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group form-check mt-3">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                </label>
            </div>
            <div class="form-group mt-3">
                <input type="submit" value="Log In" class="btn btn-primary" />
            </div>
            
            <div class="mt-3">
                <a asp-action="ForgotPassword">Forgot your password?</a>
            </div>

            <div class="form-group mt-3">
                <div class="g-recaptcha" data-sitekey="6Len98ErAAAAAMZzLSr-AFyfz3Etwa9DZqUc79Qf"></div>
            </div>

        </form>
    </div>
</div>

@section Scripts {
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}