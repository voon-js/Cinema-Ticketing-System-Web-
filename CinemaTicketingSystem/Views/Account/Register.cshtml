@model CinemaTicketingSystem.ViewModels.RegisterViewModel

@{
    ViewData["Title"] = "Register";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title text-center">Create Account</h3>
                </div>
                <div class="card-body">
                    <form asp-action="Register" method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <div class="form-group mb-3">
                            <label asp-for="Username" class="form-label"></label>
                            <input asp-for="Username" class="form-control" />
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Email" class="form-label"></label>
                            <input asp-for="Email" class="form-control" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Password" class="form-label"></label>
                            <input asp-for="Password" class="form-control" type="password" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                            <div class="form-text">Password must be at least 6 characters long.</div>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="ConfirmPassword" class="form-label"></label>
                            <input asp-for="ConfirmPassword" class="form-control" type="password" />
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary btn-lg">Register</button>
                        </div>
                    </form>
                </div>
                <div class="card-footer text-center">
                    <p class="mb-0">Already have an account? <a asp-action="Login">Login here</a></p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Password strength indicator for registration
        document.addEventListener('DOMContentLoaded', function() {
            const passwordInput = document.getElementById('Password');
            const confirmPasswordInput = document.getElementById('ConfirmPassword');

            if (passwordInput) {
                passwordInput.addEventListener('input', function() {
                    const password = this.value;
                    const strengthText = document.getElementById('passwordStrength') || createStrengthIndicator();

                    if (password.length === 0) {
                        strengthText.textContent = '';
                        strengthText.className = 'form-text';
                    } else if (password.length < 6) {
                        strengthText.textContent = 'Weak - too short';
                        strengthText.className = 'form-text text-danger';
                    } else if (password.length < 8) {
                        strengthText.textContent = 'Medium';
                        strengthText.className = 'form-text text-warning';
                    } else {
                        strengthText.textContent = 'Strong';
                        strengthText.className = 'form-text text-success';
                    }
                });
            }

            if (confirmPasswordInput) {
                confirmPasswordInput.addEventListener('input', function() {
                    const password = passwordInput.value;
                    const confirmPassword = this.value;

                    if (confirmPassword.length > 0 && password !== confirmPassword) {
                        this.setCustomValidity('Passwords do not match');
                    } else {
                        this.setCustomValidity('');
                    }
                });
            }

            function createStrengthIndicator() {
                const strengthText = document.createElement('div');
                strengthText.id = 'passwordStrength';
                strengthText.className = 'form-text';
                passwordInput.parentNode.appendChild(strengthText);
                return strengthText;
            }
        });
    </script>
}